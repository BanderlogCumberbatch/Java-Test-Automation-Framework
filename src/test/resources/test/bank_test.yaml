- name: "Добавление клиента"
  description: "Тест XYZBank"
  tags: [add_info]
  steps:
    - name: "Открытие сайта"
      action: OPEN
      url:

    - name: "Переход на страницу менеджера"
      action: CLICK
      element:
        by: XPATH
        value: "//*[contains(@ng-click, 'manager()')]"

    - name: "Переход на страницу добавления клиента"
      action: CLICK
      element:
        by: XPATH
        value: "//*[contains(@ng-click, 'addCust()')]"

    - name: "Ввод имени"
      action: TYPE
      element:
        by: XPATH
        value: "//*[contains(@placeholder, 'First Name')]"
      value: "${credentials.client.firstname}"

    - name: "Ввод фамилии"
      action: TYPE
      element:
        by: XPATH
        value: "//*[contains(@placeholder, 'Last Name')]"
      value: "${credentials.client.lastname}"

    - name: "Ввод почтового индекса"
      action: TYPE
      element:
        by: XPATH
        value: "//*[contains(@placeholder, 'Post Code')]"
      value: "${credentials.client.postcode}"

    - name: "Добавить клиента"
      action: CLICK
      element:
        by: XPATH
        value: "//*[contains(text(),'Add Customer') and contains(@class, 'btn btn-default')]"

    - name: "Принять всплывающее сообщение"
      action: ACCEPT_ALERT

    - name: "Переход на страницу с таблицей"
      action: CLICK
      element:
        by: XPATH
        value: "//*[contains(@ng-click, 'showCust()')]"

    - name: "Проверка текста кнопки"
      action: GET_TEXT
      element:
        by: XPATH
        value: "//*[contains(@class, 'btn home')]"
      assert:
        method: EQUALS
        expected: "Home"
        soft: FALSE

- name: "Проверка таблицы"
  description: "Тест XYZBank"
  tags: [table, functional]
  steps:
    - name: "Проверка добавленных данных"
      action: GET_TABLE_ROW
      args: [ 1, "First Name" ]
      assert:
        method: EQUALS
        expected: [ "First Name Last Name Post Code Delete" ]
        soft: FALSE

    - name: "Сортировка столбца"
      action: SORT_TABLE_COLUMN
      args: [ 1 ]

    - name: "Проверка обратной сортировки"
      action: CHECK_COLUMN_SORTED_REV
      args: [ 1 ]
      assert:
        method: ASSERT_TRUE
        soft: TRUE

    - name: "Сортировка столбца"
      action: SORT_TABLE_COLUMN
      args: [ 1 ]

    - name: "Проверка сортировки"
      action: CHECK_COLUMN_SORTED
      args: [ 1 ]
      assert:
        method: ASSERT_TRUE
        soft: TRUE

    - name: "Проверка данных до удаления"
      action: CALL_METHOD
      method: getSelectedElementOfColumn
      args: [ "First Name", 1 ]
      assert:
        method: EQUALS
        expected: [ "First Name" ]
        soft: TRUE

    - name: "Удаление элемента"
      action: CLICK_TABLE_ELEMENT
      args: [ 5, 1, "First Name" ]

    - name: "Проверка данных после удаления"
      action: GET_TABLE_ELEMENT
      args: [ "First Name", 1 ]
      assert:
        method: NOT_EQUALS
        expected: [ "First Name" ]
        soft: TRUE